// <auto-generated />
using System;
using KhawLang.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KhawLang.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231117172839_addTag")]
    partial class addTag
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KhawLang.Models.Cart", b =>
                {
                    b.Property<int?>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CartID"));

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalAmount")
                        .HasColumnType("int");

                    b.HasKey("CartID");

                    b.HasIndex("CustomerID")
                        .IsUnique()
                        .HasFilter("[CustomerID] IS NOT NULL");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("KhawLang.Models.Customer", b =>
                {
                    b.Property<int?>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CustomerId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentItemPaymentId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("PaymentItemPaymentId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("KhawLang.Models.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.HasKey("MealId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("KhawLang.Models.MealPlan", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanID"));

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalAmount")
                        .HasColumnType("int");

                    b.HasKey("PlanID");

                    b.HasIndex("CustomerID");

                    b.ToTable("MealPlan");
                });

            modelBuilder.Entity("KhawLang.Models.MealTag", b =>
                {
                    b.Property<int>("MealTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealTagId"));

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("MealTagId");

                    b.HasIndex("MealId");

                    b.HasIndex("TagId");

                    b.ToTable("MealTags");
                });

            modelBuilder.Entity("KhawLang.Models.PaymentInfo", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("CVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CardExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.ToTable("PaymentInfo");
                });

            modelBuilder.Entity("KhawLang.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("MealPlanMealTag", b =>
                {
                    b.Property<int>("MealPlansPlanID")
                        .HasColumnType("int");

                    b.Property<int>("MealTagsMealTagId")
                        .HasColumnType("int");

                    b.HasKey("MealPlansPlanID", "MealTagsMealTagId");

                    b.HasIndex("MealTagsMealTagId");

                    b.ToTable("MealPlanMealTag");
                });

            modelBuilder.Entity("MealTag", b =>
                {
                    b.Property<int>("MealsMealId")
                        .HasColumnType("int");

                    b.Property<int>("TagsTagId")
                        .HasColumnType("int");

                    b.HasKey("MealsMealId", "TagsTagId");

                    b.HasIndex("TagsTagId");

                    b.ToTable("MealTag");
                });

            modelBuilder.Entity("KhawLang.Models.Cart", b =>
                {
                    b.HasOne("KhawLang.Models.Customer", "Customer")
                        .WithOne("CartInfo")
                        .HasForeignKey("KhawLang.Models.Cart", "CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("KhawLang.Models.Customer", b =>
                {
                    b.HasOne("KhawLang.Models.PaymentInfo", "PaymentItem")
                        .WithMany()
                        .HasForeignKey("PaymentItemPaymentId");

                    b.Navigation("PaymentItem");
                });

            modelBuilder.Entity("KhawLang.Models.MealPlan", b =>
                {
                    b.HasOne("KhawLang.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("KhawLang.Models.MealTag", b =>
                {
                    b.HasOne("KhawLang.Models.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhawLang.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MealPlanMealTag", b =>
                {
                    b.HasOne("KhawLang.Models.MealPlan", null)
                        .WithMany()
                        .HasForeignKey("MealPlansPlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhawLang.Models.MealTag", null)
                        .WithMany()
                        .HasForeignKey("MealTagsMealTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MealTag", b =>
                {
                    b.HasOne("KhawLang.Models.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsMealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhawLang.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KhawLang.Models.Customer", b =>
                {
                    b.Navigation("CartInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
